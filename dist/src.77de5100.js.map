{"version":3,"sources":["view/CanvasView.ts","models/Ball.ts","models/Paddle.ts","setup.ts","models/Brick.ts","helpers.ts","CollisionHandler.ts","index.ts"],"names":[],"mappings":";;AOCA;;AACA;;AACA;ADEA,ADLA,AJEA,AGAA,AFAA,ACFA,AHIA,IMCA,ALHA,AGAA,AFAA,AFEA,ICFA,CGAA,CFAA,IFEA,MMCA;AAAA,ACEA,ANLA,AGAA,AFAA,AFEA;AMCA,ADMA,AJTA,AGAA,AFAA,ACDA,AHGA,YMCA,ALHA,AGAA,AFAA,AFEA;AMCA,ACGA,ANFI,AGDA,AFEA,AFKA,WMPJ,ALCI,AGDA,AFEA,AFKA,ICNA,CACI,AGFJ,CACI,AFCJ,CACI,GFIJ,CAAY,GCNZ,CGDA,CEAJ,ALGgB,ACDZ,CEAY,CFEA,CIJhB,CAsDC,CAtDD,ANOI,CMLA,CNK8B,CCN9B,CGDA,CHIY,ACFZ,CECY,CFEA,GDJZ,CGDA,CHKY,ACHZ,CEEY,CFEA,IDLZ,CGDA,CHMI,ACJJ,CEGY,CFEA,GDNZ,EAKiB,AGNjB,AFEA,EEG0B,AFED;ADJb,AGDA,AFAZ,ACLJ,AHWQ,QENJ,CDCY,AGDA,AJMH,IENT,EFMI,CENJ,CDCY,AGDA,CJMM,ECLN,AGDA,AFAZ,MFM0B,CAAC,CCLf,AGDA,YJMM,CAAuB,UAAvB,CAAd;AOFR,ANFgB,AGDA,AJMR,SCLQ,AGDA,AJMH,KCLG,AGDA,GHCA,AGDA,KHCA,AGDA,AJMR,GAAqB,KAAK,MAAL,CAAY,UAAZ,CAAuB,IAAvB,CAArB;AMNG,ALEK,AGDA,AFAA,ACNhB,AHYQ,EMPG,OLEK,AGDA,AFAA,AFMH,MCLG,AGDA,EFAA,CIDL,ALEK,AGDA,CEDL,CJCK,CFMR,GCLQ,AGDA,AJMY,IMPjB,AJCK,CIDL,GNOyB,CAAC,aAAT,CAAuB,CMPxC,GAAP,INOwB,CAApB,KMPuB,IAA3B,EAAuC,MAAvC,EAAuD,MAAvD,EAAyE;AACrE,ACcR,ANpBY,AGOI,AFAA,AFMR,SCbI,AGOI,AFAA,AFMH,KCbD,ACOI,AFMR,CINQ,EHPI,ACOJ,AFMK,CINL,GHPQ,CCOR,EEAA,CJMa,CCbT,ADaU,ECblB,WDaS,CAAuB,QAAvB,CAAb;AMNA,ALGA,AGVI,AFQI,ACPhB,AHaQ,QMPG,CLGE,AGVD,AFQI,AFMH,GMPE,CAAC,ANOR,CCJA,AGVI,CHUO,ACFH,CFMI,CIdA,CHUZ,ACFQ,GDES,AGVD,GEOb,AJCK,AFMY,CMPA,ANOC,CMPlB,AFPS,EAAR,CEOoB,CLGxB,GKH4B,CAAC,INOjB,CAAuB,GMPhC,GAAqC,CNO5B,CAAZ,IMP8C,CAAC,WAAP,CAAmB,CAAxD,IACI,IAAI,CAAC,WAAL,CAAiB,CAAjB,GAAqB,MAAM,CAAC,WAAP,CAAmB,CAAnB,GAAuB,MAAM,CAAC,QADvD,IAEI,IAAI,CAAC,WAAL,CAAiB,CAAjB,GAAqB,IAAI,CAAC,SAA1B,KAAwC,MAAM,CAAC,WAAP,CAAmB,CAFlE,EAEqE;AAC7D,ACWhB,ANVQ,AGFA,AFAQ,AFMX,MMLW,GLCH,AGFA,AFAG,CICI,CAAC,GFDb,AFAQ,CEAG,EHEX,ACFQ,CEAR,EHEgB,CGFC,CFAT,KICA,CLCR,EGFA;AEEK,ALCL,AGFA,AFVI,KIKiE,CAQrE,GLDK,AGFA,AFVD,KDYJ,ACZI,GDYS,AGFb,AFVY,GEUI,CFVA,CDYhB,ICZY,EEUZ,AFVI;ADaJ,AGFA,AJMG,EAAA,OCJE,AGFA,GJMF,CAAA,CINH,CHEA,EGFa,CHEC,IGFd,AJMG,CAAA,CCJH,IDIG,GAAP,YAAA;ACHI,AGFA,AFsDJ,AC/DJ,SFWa,AGFA,AFsDT,KDpDI,CGFA,EHEa,CGFC,GFsDlB,GEtDI,AFsDW,UAAC,KAAD,EAAqB;AIpDhC,ACjBR,ANiBsB,AGDd,AFsDA,AC/DR,MFUsB,CAAC,CKAZ,CLAc,AGDZ,CFsDF,EIrDI,CAAC,CLAK,CGDb,AFsDQ,CAAC,EEtDK,EFsDX,IIrDA,AFDH,CECoB,AJqDF,CIrDf,GAAqB,CAArB,IACI,EJoDP,EIpDW,AJoDoB,CIpDnB,IJoDuB,CAAC,MIpD7B,CAAiB,CAAjB,AJoDwB,GIpDH,AJoDmB,IIpDf,CAAC,AJoDF,CAA/B,KACK,EIrDE,EJqDC,CIrDoC,IJqD/B,CAAC,CIrDoC,CAAC,EJqD3C,IIrDoC,CAAc,AJqDnC,KItDvB,EACiE,KJqD5D,EAAgC,KAAI,CAAC,SAAL,GAAiB,KAAjB;AIpD7B,ACbhB,ANWgC,AGA3B,AFuDA,AChEL,AHaQ,IGbF,CD6DF,AFhDI,CMFQ,ALFgB,CAAC,ADIzB,ECJ2B,CKEf,ALFgB,AETxB,AHaJ,CMFa,EHXoB,EHa5B,MGboC,CAAC,KGWlC,CNER,MAAkB,CGbe,CAAuB,EHaxD,IAAkB,EAAA,IGbe,CAAzC,AHa0B,EGX1B,GHW0B,CAAlB,GAAkB,KAAA,CAAlB,GAAkB,EAAA,CAAE,SAAF,CAAY,CAAZ,EAAe,CAAf,EAAkB,KAAK,MAAL,CAAY,KAA9B,EAAqC,KAAK,MAAL,CAAY,MAAjD,CAAlB;AMDK,ACVb,ANOqB,ADKhB,GAFM,EMZkE,ALSrE,CKKA;ACAR,ANJK,AGED,AFsDA,AC/DG,ECSH,EDTS,ICST,CAAA,AFsDA,QC/DsB,GAAG,EAAtB,CCSH,AFsDA,CEtDI,EFsDa,GEtDb,CAAA,MFsDc,GEtDlB,EAAI,AFsDa,EAAqB,QEtDtC,EAAY;AGMhB,AHPI,AFwDI,AFnDG,EAAA,QEmDA,EFnDA,CAAA,EEmDK,CAAC,IAAN,EFnDA,CAAA,EEmDe,WAAlB,EAA+B,AFnD5B,GAAP,EEmDuC,CAAC,OFnDjB,CEmDY,GAAgB,IAAhB,CAA/B,IFnDJ,CEoDS,CFpDuD,GEoDpD,KAAK,CAAC,IAAN,KAAe,YAAlB,EAAgC,KAAI,CAAC,SAAL,GAAiB,IAAjB;AIrDrC,ADVR,AEcA,ANNI,ACwDC,ACjEE,AHYH,ECHA,EMMA,AJfS,CD8DT,GInDO,ALFP,ADGA,CCHA,AGDA,GEGW,ACIH,CDJI,ANCZ,CGZmB,CIeR,CPHX,CGZsB,EAAnB,CIeP,APHI,GCHA,CKEO,ALFH,AGDJ,CEGwB,CAAjB,ELFH,CKEwB,ALFxB,CKEA,EAA2B,MLF/B,EAAI,UAAJ,EAAY;AKGJ,ADVN,AEcN,ANRI,AGCI,IGOJ,EDJQ,GDVI,AEcP,CDJO,CAAC,CCIL,CAAZ,AHPe,EGSf,GHToB,GCPd,EDOE,CCPoB,GCUhB;AACH,ADVL,ADOC,AFRG,ACDD,IAAM,CCOG,ICLL,AJMP,ACPS,KAAL,ACDe,CDCJ,ECDO,CDClB,CCDD,EDCkB,CGCR,EJMb,IINO,CACH,CHFA,SGEC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAAyB;ACU5B,ADTO,AEcZ,ANTQ,ACPA,GIPG,CAHX,CAuBI,GDXc,CEcT,ALhBI,EGEQ,EJKN,CILS,GHFhB,CGEoB,AJKR,CILS,CEc7B,ALhBwB,CKgBH,AHXL,EHER,CILgB,CAAW,EEcnC,CLhBQ,CKgB+B,IFdI,GAAG,CAAtB,IAA2B,iBAAvC;AEeR,ANTC,ACPG,ACFD,AHWC,EOOJ,EJlBS,CFOG,ADIR,EAAA,COOE,CAAC,ALhBE,CFSL,IETA,CFSK,EOOT,ALhBiB,ACFK,CIkBN,EJlBS,AHWrB,CGXD,CDEC,IFSU,IOOd,APPI,IAAU,EAAA,KAAA,KAAA,CAAV,GAAU,KAAA,CAAV,GAAU,EAAA,CAAE,gBAAF,CAAmB,OAAnB,EAA4B,YAAA;AKPlC,AEeR,AHbY,AFHR,AFQ4C,EOQhD,CHbA,KCFc,CHDL,CKgBD,CFfS,EEeN,APRqC,CKP5B,CHDhB,GKgBJ,ALhBkB,GDIN,CIHgB,EHDxB,CGC2B,CLO8B,CAAC,KAAD,CAAb,SKPxC;ACWD,ADTC,AEcX,AHVG,AFNI,ACHD,AHUgE,EMI5D,AFLP,EDTS,CHUK,CAAV,EKLU,ADId,CCJe,ADIf,AFNS,GGES,EHFd,CCHgB,EDGH,CIWV,AHdgB,CGchB,GJXH,CEMJ,CAAI,ADTyB,GAC7B,CGaO,CAAA,AFLH,CAAA,CDRA,CAAC,GEI6B,EFJlC,CEIqC,AFJ1B,CCQX,ADRY,ECQR,CCJqC,GFJvB,CAAC,GGaZ,EHbK,CGaZ,EFLA,ADR2B,ECQZ,MEKa,CDTyB,GCSrD,CHbwC,CGaA,EHbG,CAAhC,GGaX,CHbgD,CGaO,ODTlB,CAA7B,CFJR,IAA8D,aADjC,GAE7B,GAFG;AGcH,ADRQ,AJAI,ACFR,AFOH,GCLD,ADGO,KMKP,ADRc,CAAC,ADGf,AFLS,GGES,CCQlB,GAAA,CJVI,GIUJ,AJVoB,IEKpB,CFLI,UGE8B,GAAG,IAAI,sBAAa,oBAAjB,CAA7B;AAEA,AEaZ,ANXI,AGAI,AFLA,ACFD,EFOH,EEPS,IEKE,AJEX,CMWK,ANXL,ACLS,IEKE,ECFO,CFLG,ECOL,AFLZ,CKgBR,AJlB4B,CEKD,AEaP,CFbR,AHHa,EGIT,AJCZ,CAAI,CEP0B,CIkBlC,AHXQ,AFLA,CARqB,CKwBS,ANX9B,ACHA,ACHJ,CFMI,CIDe,EFLf,CAAC,EEKO,GJCZ,AENA,CAAW,CFMP,AENQ,MAAM,CAAC,MFMnB,AENY,EFMG,CENa,aAAa,GAAG,CAAjC,IAAsC,UAAjD,IAA+D,aADjC,GAE9B,EAFG;AGYC,ADJI,AEWR,AHXC,AJEM,EOSP,APTO,GIJQ,GEMP,ACOF,CAAC,ANZP,EICQ,CLED,CAAA,IOSP,CAAgB,CDPG,GAAG,ANFf,CAAA,CCHP,CICQ,CAAY,CCIhB,CCOJ,GFXQ,CLED,CKFkB,CACb,CLCZ,GKDgB,OLCC,KKDL,ALCZ,CKAY,CLAkB,mBKAL,OAAb,CADA,EAEA;ACER,ADFS,AESb,ANZI,ACHA,ACFD,AHQC,EOSJ,EDPI,AJRA,ACFK,EEQI,CAAC,CLAP,CKAO,CCEJ,ADFE,AESJ,CDPG,CJRC,CKeD,ANZA,ACHE,AFMD,GGRS,EGUjB,ACOJ,ANZgB,CKMR,AHXgB,ECGT,CDHZ,GHQC,CCHA,CDII,EMEC,AJTL,CAA0B,EFOjB,EMEL,EAAQ,GJTZ,EISI,AJTiC,EISpB,CNFb,CAAkB,CEPoB,QFOtC,GAA8B,GEPlC,EFOuC,CAAC,QAAN,EAA9B;AMGI,ADJI,AEUnB,ANZI,ACHG,AFOH,GAHM,CEJH,CDCW,CIIC,CAAC,EAAA,CCIF,EJTH,CAAC,EISM,CAAC,aJThB,CAA0B,MISf,CAA0B,AJTrC,EAAmC,EISxB,EAAgC,CJTH,IIS7B,CAAH,EAA0C,KJTlD;AIUY,ADLJ,ADLG,AFCd,ACHE,GCEH,CDFS,CEKG,EAGA,CCII,IAAI,CAAC,IHZC,GAAG,CFGV,CEHZ,GEKS,EAIA,ECGI,iBDPJ,EAKA,oBAAa,OAAb,CALA,CADa,CAAjB,CAAA;ACSQ,ADDX,AEOT,AHbI,AJKO,EILP,AJKO,CKlBA,EAoBH,EApBG,CCoBS,ADpBhB,ADaA,CGaK,AHbL,GJKO,CMEc,ANFd,CMEe,ICM1B,CAAmB,GPRR,CMES,AFPhB,AJKO,CILH,CGaR,CDNsC,CCMD,EHb7B,CAAA,CEOmC,ANFhC,CMEiC,ENFxC,KILA,EEOkC,AFP9B,GEOgD,ANFpC,CMEA,GNFhB,EAA4B,EIL5B,EAAa;ACShB,AEKG,ANjBe,ACGf,ACLG,AHWC,EENJ,CDHA,CEFS,IDKT,AFMO,CINP,AFAA,IFMY,IGXU,AHWlB,EACI,CGZiB,GDKzB,ACLG,CCKH,AFAI,AFOS,IAAL,CAAU,CEPd,CAAA,OFOI,EEPR,CFO8B,CEP1B,GFOI,OEPR,EAAY;AISI,ACMhB,ANdA,AGAI,AFFJ,AFSC,EOOD,ANdA,CDIO,IOUF,CNdL,CAAA,CMcQ,CAAR,CDNmB,CFRR,IEQa,CAAC,AFRT,KHAhB,CAAI,AGAA,GEQe,CLRf,CAAA,GKQmC,CAAvB,EAAyB,GLRzC,EAAI,UAAJ,EAAY;AKSQ,ACMpB,AHdC,ADNE,EIoBH,EJpBS,CCII,GGgBP,CAAC,ANfP,ACDA,CIUoB,MAAM,AHdL,CGcM,ACM3B,CAAgB,CJpBQ,CIoBxB,CJpBG,EGciB,CAAc,ALTlC,ACDA,KIUoB,EAAqB,CAArB;AACH,ACMjB,ANfI,ACDA,AFSG,EOOP,APPO,MOOD,CAAC,GPPA,CCRI,ACDA,AFSJ,KOOP,ANfgB,ACDA,CKgBC,CAAjB,CHjBa,CGaoB,APH1B,COQP,ANhBI,ACDA,AFSG,SAAA,GAAP,UAAiB,KAAjB,EAA6C;ACP5C,ACDA,ACLE,IAAM,CFIG,ACDA,SCHO,GAAG,CAAnB;AGgBa,ACMhB,AHnBa,GAAb,GGmBM,EDNU,ICMJ,GAAG,IDNY,ELZf,ACDA,CIakB,IAAd,iBCMhB;ADLa,ACMb,AHhBA,ADNG,AHaC,EOSJ,AHhBA,EDNS,IIsBH,AHhBN,AJOO,COSA,AHhBP,AJOQ,IGbU,CHad,EGbiB,AHcb,EGdL,CIsBH,CAAkB,GHhBlB,CAAI,EGgBJ,EAPiC,CAQjC,AHjBI,CAAA,SAAJ,EAAI,UAAJ,EAAY;AEWH,ALdG,ACDA,AFcR,GCbJ,ACDA,EIGI,ANWA,EAAA,EIVJ,CJUI,KAAK,SIVT,IJUI,MAAkB,IAAlB,IAAkB,EAAA,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAkB,EAAA,CAAE,SAAF,CACd,KAAK,CAAC,QADQ,EAEd,KAAK,CAAC,WAAN,CAAkB,CAFJ,EAGd,KAAK,CAAC,WAAN,CAAkB,CAHJ,EAId,KAAK,CAAC,QAJQ,EAKd,KAAK,CAAC,SALQ,CAAlB;AMIA,ACIJ,ANjBA,AGAI,AFDJ,ACLG,AHsBF,EChBD,ACDA,CFMO,CGXE,EIuBH,ENjBN,ACDA,CDCA,ACDA,CKkBU,CDJC,ECIE,AHjBF,EDNS,EIuBH,CHjBD,ADNO,GAApB,CGmBC,CLbJ,AGAI,AFDJ,CDCI,ACDA,GKkBS,CACT,ANlBA,CAAA,CCDA,CAAA,ODCJ,EAAI,ACDJ,CKkBa,CLlBT,CKoBA,QNnBJ,EAAa,ECDb,EAAe;AIed,ACKI,AHlBJ,GELM,CAxBX,AC+CS,CDHL,ACGM,AHpBM,EGoBJ,ENnBR,ACDA,eDCA,ACDA,CKoBI;AAAiB,ANlBjB,ACDA,ACLD,AHuBI,EAAA,EOCc,AJxBZ,CIwBa,EAAE,KPDjB,CCjBI,ACDA,AFkBJ,EGvBa,GFMJ,ACDA,ACLO,GCIX,ADJT,CHuBI,CAAA,CCjBH,ECDA,OFkBG,GAAP,UAAkB,MAAlB,EAAiC;AOC7B,ANjBH,ACDA,AFiBD,GODa,EAGT,ANpBS,ACDE,GFmBf,KAAA,GAAA,IAAA,CODa,EAIT,gBAJS,EAKT,iBALS,CAAb,CATiC,CAgBjC;ADPO,AFlBK,ADFT,EGoBI,CFlBP,CDFS,YAAY,EGoBd,CAAA,AHpB4C,EFGtC,ACDE,OIkBR,CAAA,oBAAA,GAAP,UAA4B,IAA5B,EAAwC,KAAxC,EAAoD;AAChD,ACOJ,AHtBA,ADLF,AHqBM,EIhBJ,GDLC,CI2BK,EDPC,AFfP,AJgBO,CIhBP,AJgBQ,GMDG,ACOC,CDPA,ECOG,APNX,EACI,EOKW,GJ5BgC,CCMnD,CEeO,AFfH,CEeoB,CAAjB,GAAqB,AFfxB,CAAA,GEe4B,ACOjB,CDPkB,ACQ7B,KHvBJ,EAAI,CEeG,GAAqC,ICO7B,CDPkC,CAAC,ACS9C,CHxBJ,EAAa,QEe+B,CAAkB,CAAvD,IACI,IAAI,CAAC,WAAL,CAAiB,CAAjB,GAAqB,KAAK,CAAC,WAAN,CAAkB,CAAlB,GAAsB,KAAK,CAAC,QADrD,IAEI,IAAI,CAAC,WAAL,CAAiB,CAAjB,GAAqB,IAAI,CAAC,SAA1B,GAAsC,KAAK,CAAC,WAAN,CAAkB,CAF5D,IAGI,IAAI,CAAC,WAAL,CAAiB,CAAjB,GAAqB,KAAK,CAAC,WAAN,CAAkB,CAAlB,GAAsB,KAAK,CAAC,SAHxD,EAGmE;AAC3D,ACKP,AN3BQ,ACDE,ACAjB,AHuBM,GCtBJ,ACDA,CK4BK,APLD,COKE,AJ5BL,EI4BO,EHxBR,CJmBU,CAAC,EMAQ,IAAP,CNAR,CACI,KIpBR,ADNmD,GI8B/C,EPJI,KAAA,EAAK;AMAJ,ACIc,ANvBvB,AGAI,AFDJ,ACHF,AHuBmB,ECnBjB,ACDA,EKwBuB,CAAC,AJ3BvB,EI2ByB,CNvB1B,ACDA,CDCA,ACDA,IKwBgC,AHvBrB,AJmBM,COIgB,IHvBjB,AJmBK,CAAC,COII,CAAc,ENvBxC,ACDA,CDCI,AGAA,AFDA,CCN+C,EI8BzB,CNvBtB,ADmBa,CCnBb,ADmB4B,COIiB,ALxB7C,CAAA,GFoBa,CAAA,GCnBjB,EAAI,ACDJ,EAAI,QKwBsB,ANvB1B,EAAY,ACDZ,CKwBiE,CLxBrD;AKwBR,AHtBH,ADJH,AHsBwC,GOEvB,EAGX,AHzBS,ADFZ,AHqBG,IClBJ,ACDA,cCNmD,CI4BpC,ANrBf,ACDA,EK0BI,oBAJW,EAKX,mBALW,CAAf,CAjBiC,CAyBjC;ADTI,ALnBA,ACDA,ACFN,AHuBG,GAPM,EGhBN,MGsBU,ELnBA,ACDA,GIoBP,ELnBY,ACDA,GEDH,EHET,ACDA;AIqBH,ACSD,AN5BC,ACDA,ACRkD,CAAhD,EGoBI,ELbK,ACDA,CK+BN,gBAAgB,GAAG,IAAI,kCAAJ,EAAzB,CA1BiC,CA4BjC;AHjCa,AJuBjB,GIvBI,MJuBJ,UAAA,ECtBgB,ACDA;AIuBhB,ACWI,AH7BA,ADHG,AHlCP,CAAA,COkEI,AH7BA,CJrCJ,CGkCa,ICGT,CEkBJ,AFlBI,CG6BQ,CAAC,KJhCY,CIgCb,EAAS,AJhCkC,ICGnD,CAAI,CEkBR,ACWY,EAAiB,EH7BrB,CAAA,CG6BI,EAAuB,MAAvB,AH7BR,EG6BuC,AH7BnC,WAAJ,EAAa,GG6BL,CAAR;ADjEJ,ACkEC,ANlCe,AGGZ,AFJY,ACGd,CGlCF,EAAA,ALgCI,ACDA,ECGC,CADkD;AFInD,ACFA,ACAF,EFEE,ACFA,GCAC,CAFkD,EFInD,ACFA,CDEA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","file":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["import { Ball } from \"../models/Ball\";\r\nimport { Brick } from \"../models/Brick\";\r\nimport { Paddle } from \"../models/Paddle\";\r\n\r\nexport class CanvasView {\r\n    \r\n    canvas : HTMLCanvasElement;\r\n    private renderContext : CanvasRenderingContext2D | null;\r\n    private scoreDisplay : HTMLObjectElement | null;\r\n    private start : HTMLObjectElement | null;\r\n    private info : HTMLObjectElement | null;\r\n\r\n    constructor(canvasName: string){\r\n        this.canvas = document.querySelector(canvasName) as HTMLCanvasElement;\r\n        this.renderContext = this.canvas.getContext(\"2d\");\r\n        this.scoreDisplay = document.querySelector(\"#score\");\r\n        this.start = document.querySelector(\"#start\");\r\n        this.info = document.querySelector(\"#info\");\r\n    }\r\n\r\n    public clear(): void {\r\n        this.renderContext?.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n\r\n    public initStartButton(startFunction: (view: CanvasView) => void): void {\r\n        this.start?.addEventListener(\"click\", () => startFunction(this));\r\n    }\r\n\r\n    public drawScore(score: number): void {\r\n        if(this.scoreDisplay)\r\n            this.scoreDisplay.innerHTML = score.toString();\r\n    }\r\n\r\n    public drawInfo(text: string): void {\r\n        if(this.info)\r\n            this.info.innerHTML = text;\r\n    }\r\n\r\n    public drawModel(model: Brick | Paddle | Ball): void {\r\n        if(!model)\r\n            return\r\n\r\n        this.renderContext?.drawImage(\r\n            model.getImage,\r\n            model.getPosition.x,\r\n            model.getPosition.y,\r\n            model.getWidth,\r\n            model.getHeight\r\n        );\r\n    }\r\n\r\n    public drawBricks(bricks: Brick[]): void {\r\n        if(!bricks)\r\n            return\r\n        \r\n        bricks.forEach(\r\n            brick => this.drawModel(brick)\r\n        );\r\n    }\r\n}","import { Vector } from \"../types\";\r\n\r\nexport class Ball {\r\n    private image = new Image();\r\n    private speed: Vector;\r\n\r\n    constructor(\r\n        imagePath: string,\r\n        private position: Vector,\r\n        private width: number,\r\n        private height: number,\r\n        speed: number\r\n    ) {\r\n        this.image.src = imagePath;\r\n        this.position = position;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.speed = {x: speed, y: -speed};\r\n    }\r\n\r\n    // Getters\r\n    get getImage(): HTMLImageElement {\r\n        return this.image;\r\n    }\r\n    \r\n    get getPosition(): Vector {\r\n        return this.position;\r\n    }\r\n\r\n    get getWidth(): number {\r\n        return this.width;\r\n    }\r\n\r\n    get getHeight(): number {\r\n        return this.height;\r\n    }\r\n\r\n    get getSpeed(): Vector {\r\n        return this.speed;\r\n    }\r\n\r\n    // Setter\r\n    set setSpeed(speed: number){\r\n        this.speed = {x: speed, y: -speed};\r\n    }\r\n\r\n    // Functions\r\n    public changeDirectionY(): void {\r\n        this.speed.y = -this.speed.y;\r\n    }\r\n\r\n    public changeDirectionX(): void {\r\n        this.speed.x = -this.speed.x;\r\n    }\r\n\r\n    public moveBall(): void {\r\n        this.position.x += this.speed.x;\r\n        this.position.y += this.speed.y;\r\n    }\r\n}","import { Vector } from \"../types\";\r\n\r\nexport class Paddle {\r\n    private image = new Image();\r\n    private moveLeft: boolean;\r\n    private moveRight: boolean;\r\n\r\n    constructor(\r\n        imagePath: string,\r\n        private position: Vector,\r\n        private width: number,\r\n        private height: number,\r\n        private speed: number,\r\n    ) {\r\n        this.image.src = imagePath;\r\n        this.position = position;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.speed = speed;\r\n        this.moveLeft = false;\r\n        this.moveRight = false;\r\n\r\n        // Handling movement\r\n        document.addEventListener(\"keydown\", this.keyDownHandler);\r\n        document.addEventListener(\"keyup\", this.keyUpHandler);\r\n    }\r\n\r\n    // Getters\r\n    get getImage(): HTMLImageElement {\r\n        return this.image;\r\n    }\r\n    \r\n    get getPosition(): Vector {\r\n        return this.position;\r\n    }\r\n\r\n    get getWidth(): number {\r\n        return this.width;\r\n    }\r\n    \r\n    get getHeight(): number {\r\n        return this.height;\r\n    }\r\n\r\n    get getSpeed(): number {\r\n        return this.speed;\r\n    }\r\n\r\n    get isMovingLeft(): boolean {\r\n        return this.moveLeft;\r\n    } \r\n\r\n    get isMovingRight(): boolean {\r\n        return this.moveRight;\r\n    } \r\n\r\n    // Setters\r\n    set setSpeed(speed: number) {\r\n        this.speed = speed;\r\n    }\r\n\r\n    // Functions\r\n    public movePaddle(): void {\r\n        if(this.moveLeft)\r\n            this.position.x -= this.speed;\r\n        else if(this.moveRight)\r\n            this.position.x += this.speed;\r\n    }\r\n\r\n    keyUpHandler = (event: KeyboardEvent) => {\r\n        if(event.code === \"ArrowLeft\") this.moveLeft = false;\r\n        else if(event.code === \"ArrowRight\") this.moveRight = false;\r\n    }\r\n\r\n    keyDownHandler = (event: KeyboardEvent) => {\r\n        if(event.code === \"ArrowLeft\") this.moveLeft = true;\r\n        else if(event.code === \"ArrowRight\") this.moveRight = true;\r\n    }\r\n}","import RED_BRICK_IMAGE from './images/brick-red.png';\r\nimport BLUE_BRICK_IMAGE from './images/brick-blue.png';\r\nimport GREEN_BRICK_IMAGE from './images/brick-green.png';\r\nimport YELLOW_BRICK_IMAGE from './images/brick-yellow.png';\r\nimport PURPLE_BRICK_IMAGE from './images/brick-purple.png';\r\n\r\n// Grab the canvas element for calculating the brick width\r\n// depending on canvas width\r\nconst canvas: HTMLCanvasElement | null = document.querySelector('#playField');\r\n\r\n// Constants\r\nexport const STAGE_PADDING = 10;\r\nexport const STAGE_ROWS = 20;\r\nexport const STAGE_COLS = 10;\r\nexport const BRICK_PADDING = 5;\r\nexport const BRICK_WIDTH = canvas\r\n  ? Math.floor((canvas.width - STAGE_PADDING * 2) / STAGE_COLS) - BRICK_PADDING\r\n  : 100;\r\nexport const BRICK_HEIGHT = canvas\r\n  ? Math.floor((canvas.height - STAGE_PADDING * 2) / STAGE_ROWS) - BRICK_PADDING\r\n  : 30;\r\nexport const PADDLE_WIDTH = 150;\r\nexport const PADDLE_HEIGHT = 25;\r\nexport const PADDLE_STARTX = 450;\r\nexport const PADDLE_SPEED = 10;\r\nexport const BALL_SPEED = 5;\r\nexport const BALL_SIZE = 20;\r\nexport const BALL_STARTX = 500;\r\nexport const BALL_STARTY = 400;\r\n\r\nexport const BRICK_IMAGES: { [key: number]: string } = {\r\n  1: RED_BRICK_IMAGE,\r\n  2: GREEN_BRICK_IMAGE,\r\n  3: YELLOW_BRICK_IMAGE,\r\n  4: BLUE_BRICK_IMAGE,\r\n  5: PURPLE_BRICK_IMAGE\r\n};\r\n\r\nexport const BRICK_ENERGY: { [key: number]: number } = {\r\n  1: 1, // Red brick\r\n  2: 1, // Green brick\r\n  3: 2, // Yellow brick\r\n  4: 2, // Blue brick\r\n  5: 3 // Purple brick\r\n};\r\n\r\n// prettier-ignore\r\nexport const LEVEL = [\r\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n  0, 0, 1, 1, 1, 1, 1, 1, 0, 0,\r\n  0, 2, 2, 2, 2, 2, 2, 2, 2, 0,\r\n  0, 3, 3, 3, 3, 3, 3, 3, 3, 0,\r\n  0, 0, 4, 4, 4, 4, 4, 4, 0, 0, \r\n  0, 0, 5, 5, 0, 0, 5, 5, 0, 0,\r\n];\r\n","import { Vector } from \"../types\";\r\n\r\nexport class Brick {\r\n    private image = new Image();\r\n\r\n    constructor(\r\n        imagePath: string,\r\n        private position: Vector,\r\n        private width: number,\r\n        private height: number,\r\n        private energy: number,\r\n    ) {\r\n        this.image.src = imagePath;\r\n        this.position = position;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.energy = energy;\r\n    }\r\n\r\n    // Getters\r\n    get getImage(): HTMLImageElement {\r\n        return this.image;\r\n    }\r\n    \r\n    get getPosition(): Vector {\r\n        return this.position;\r\n    }\r\n\r\n    get getHeight(): number {\r\n        return this.height;\r\n    }\r\n\r\n    get getWidth(): number {\r\n        return this.width;\r\n    }\r\n\r\n    get getEnergy(): number {\r\n        return this.energy;\r\n    }\r\n\r\n    // Setters\r\n    set setEnergy(energy: number) {\r\n        this.energy = energy;\r\n    }\r\n}","import {\r\n    BRICK_IMAGES,\r\n    BRICK_WIDTH,\r\n    BRICK_HEIGHT,\r\n    BRICK_ENERGY,\r\n    BRICK_PADDING,\r\n    STAGE_PADDING,\r\n    STAGE_COLS,\r\n    LEVEL\r\n} from \"./setup\";\r\n\r\nimport { Brick } from \"./models/Brick\";\r\n\r\n// Functions\r\nexport function createBricks(): Brick[] {\r\n    return LEVEL.reduce(\r\n        (accum, element, iterator) => {\r\n            const row = Math.floor(iterator + 1) / STAGE_COLS;\r\n            const col = iterator % STAGE_COLS;\r\n\r\n            const x = STAGE_PADDING + col * (BRICK_WIDTH+BRICK_PADDING);\r\n            const y = STAGE_PADDING + row * (BRICK_HEIGHT+BRICK_PADDING);\r\n\r\n            if(element === 0)\r\n                return accum;\r\n            \r\n            return [ ...accum,\r\n                new Brick(\r\n                BRICK_IMAGES[element],\r\n                {x, y},\r\n                BRICK_WIDTH,\r\n                BRICK_HEIGHT,\r\n                BRICK_ENERGY[element])\r\n            ];\r\n        },\r\n        [] as Brick[]\r\n    );\r\n}","import { CanvasView } from \"./view/CanvasView\";\r\nimport { Ball } from \"./models/Ball\";\r\nimport { Paddle } from \"./models/Paddle\";\r\nimport { Brick } from \"./models/Brick\";\r\n\r\nexport class CollisionHandler\r\n{\r\n    // Handling ball collisions\r\n    public handleBallCollision(ball: Ball, paddle: Paddle, canvas: CanvasView): void {\r\n        // Ball collision with paddle\r\n        if(ball.getPosition.x + ball.getWidth > paddle.getPosition.x\r\n            && ball.getPosition.x < paddle.getPosition.x + paddle.getWidth\r\n            && ball.getPosition.y + ball.getHeight === paddle.getPosition.y) {\r\n                ball.changeDirectionY();\r\n            }\r\n\r\n        // Ball collision with walls\r\n        if(ball.getPosition.x < 0\r\n            || ball.getPosition.x + ball.getWidth > canvas.canvas.width) {\r\n                ball.changeDirectionX();\r\n            }\r\n        \r\n        // Ball Y-Axis constraints\r\n        if(ball.getPosition.y < 0) {\r\n            ball.changeDirectionY();\r\n        }\r\n    }\r\n\r\n    // Handling brick collisions\r\n    public handleBrickCollision(ball: Ball, bricks: Brick[]) : boolean {\r\n        let isColliding = false\r\n        bricks.forEach(\r\n            (brick, index) => {\r\n                if(this.isCollidingWithBrick(ball, brick)){\r\n                    ball.changeDirectionY();\r\n                    brick.setEnergy = brick.getEnergy - 1;\r\n\r\n                    if(brick.getEnergy === 0){\r\n                        bricks.splice(index, 1);\r\n                    }\r\n\r\n                    isColliding = true;\r\n                }\r\n            }\r\n        );\r\n\r\n        return isColliding;\r\n    }\r\n\r\n    // Helper function to check if the ball is colliding with a certain brick\r\n    public isCollidingWithBrick(ball: Ball, brick: Brick): boolean {\r\n        if(ball.getPosition.x + ball.getWidth > brick.getPosition.x\r\n            && ball.getPosition.x < brick.getPosition.x + brick.getWidth\r\n            && ball.getPosition.y + ball.getHeight > brick.getPosition.y\r\n            && ball.getPosition.y < brick.getPosition.y + brick.getHeight) {\r\n                return true;\r\n            }\r\n        return false;\r\n    }\r\n}","// Models\r\nimport { CanvasView } from \"./view/CanvasView\";\r\nimport { Ball } from \"./models/Ball\";\r\nimport { Paddle } from \"./models/Paddle\";\r\nimport { Brick } from \"./models/Brick\";\r\n\r\n// Image\r\nimport PADDLE_IMAGE from \"./images/paddle.png\";\r\nimport BALL_IMAGE from \"./images/ball.png\";\r\n\r\n// Level settings and colors\r\nimport {\r\n    PADDLE_SPEED,\r\n    PADDLE_WIDTH,\r\n    PADDLE_HEIGHT,\r\n    PADDLE_STARTX,\r\n    BALL_SPEED,\r\n    BALL_SIZE,\r\n    BALL_STARTX,\r\n    BALL_STARTY\r\n} from \"./setup\";\r\n\r\n// Helpers\r\nimport { createBricks } from \"./helpers\";\r\nimport { CollisionHandler } from \"./CollisionHandler\";\r\n\r\n// Constants\r\nlet gameOver = false;\r\nlet score = 0;\r\n\r\n// Functions\r\nfunction setGameOver(canvas: CanvasView): void {\r\n    canvas.drawInfo(\"Game over!\");\r\n    gameOver = false;\r\n}\r\n\r\nfunction setGameWin(canvas: CanvasView): void {\r\n    canvas.drawInfo(\"You win!\");\r\n    gameOver = false;\r\n}\r\n\r\nfunction startGame(canvas: CanvasView) : void {\r\n    // Reset display\r\n    score = 0;\r\n    canvas.drawInfo(\"\");\r\n    canvas.drawScore(0);\r\n    // Get and draw bricks\r\n    const bricks = createBricks(); \r\n    canvas.drawBricks(bricks);\r\n    // create ball\r\n    const ball = new Ball(\r\n        BALL_IMAGE,\r\n        {x: BALL_STARTX, y: BALL_STARTY},\r\n        BALL_SIZE,\r\n        BALL_SIZE,\r\n        BALL_SPEED\r\n        );\r\n    // create paddle\r\n    const paddle = new Paddle(\r\n        PADDLE_IMAGE,\r\n        {x: PADDLE_STARTX, y: canvas.canvas.height - PADDLE_HEIGHT - 5},\r\n        PADDLE_WIDTH,\r\n        PADDLE_HEIGHT,\r\n        PADDLE_SPEED\r\n        );\r\n\r\n    // Instantiate a CollisionHandler\r\n    const collisionHandler = new CollisionHandler();\r\n\r\n    // Loop the game\r\n    gameLoop(canvas, bricks, ball, paddle, collisionHandler);\r\n}\r\n\r\nfunction gameLoop(\r\n    canvas: CanvasView,\r\n    bricks: Brick[],\r\n    ball: Ball,\r\n    paddle: Paddle,\r\n    collisionHandler: CollisionHandler\r\n): void {\r\n    canvas.clear();\r\n    canvas.drawBricks(bricks);\r\n    canvas.drawModel(paddle);\r\n    canvas.drawModel(ball);\r\n\r\n    // Move ball\r\n    ball.moveBall();\r\n\r\n    // Checking paddle movement\r\n    if(paddle.isMovingLeft && paddle.getPosition.x > 0\r\n        || paddle.isMovingRight && paddle.getPosition.x < canvas.canvas.width - paddle.getWidth)\r\n    {\r\n        paddle.movePaddle();\r\n    }\r\n\r\n    // Handling collision\r\n    collisionHandler.handleBallCollision(ball, paddle, canvas);\r\n    const isColliding = collisionHandler.handleBrickCollision(ball, bricks);\r\n\r\n    // Adding to score on collision\r\n    if(isColliding){\r\n        score += 1;\r\n        canvas.drawScore(score);\r\n    }\r\n\r\n    // Handling winning and losing conditions\r\n    if(bricks.length === 0){\r\n        canvas.drawBricks(bricks);\r\n        return setGameWin(canvas);\r\n    }\r\n    if(ball.getPosition.y > canvas.canvas.height)\r\n        gameOver = true;\r\n\r\n    if(gameOver === true)\r\n        return setGameOver(canvas);\r\n\r\n    requestAnimationFrame(() => gameLoop(canvas, bricks, ball, paddle, collisionHandler));\r\n}\r\n\r\n// Instantiating a Canvas\r\nconst canvas = new CanvasView(\"#playField\");\r\ncanvas.initStartButton(startGame);"]}